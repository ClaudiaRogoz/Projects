Merca Ionel 321 CB 

Tema 2 Regular Expresions  Haskell

Implementarea mea se bazeaza pe parcurgerea regex-ului si a sirului in acelasi timp verificand daca elementul curent din sir verifica patternul curent din regex. Pentru paranteza simpla care nu contine nici un caracter special ii dau append la sfarsitul parantezei la ce se afla in interiorul parantezei, la fel fac si pentru | doar ca iau varianta care se potriveste din cele 2 adica am o functie care ia perechea de caractere unite prin | si ii dau append la prima si la a doua la sfarsitul parantezei. Pentru paranteza Patrata si interval am luat perechea de caractere unite prin - si am folosit [a..b] pentru a genera toate caracterele in intervalul luat de pereche iar pentru mai multe - am unit toate rezultatele si am verificat daca caracterul curent din sir se afla printre ele. Pentru ^ am facut la fel doar sa nu fie in acea lista de caractere. Pentru steluta am implementat 2 functii promite care verifica daca caracterul urmator din sir ar da Match pentru acel patern de sub steluta daca nu trecem peste steluta, si mindistP care returneaza distanta minima de la steluta pana la sfarsit, iar daca aceasta distanta este mai mica decat lungimea actuala a sirului atunci se poate da append inca o data la continutul de sub steluta de ex: pentru (a|b)*c pentru aabc se face astfel (a|b)(a|b)*c pana cand lungimea sirului este egala cu 1 adica lungimea de dupa *. 

